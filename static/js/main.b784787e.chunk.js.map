{"version":3,"sources":["components/Header/index.js","components/LoaderElement/index.js","context/MovieContext.js","components/Trending/index.js","components/Footer/index.js","components/Originals/index.js","components/TopRated/index.js","components/Home/index.js","components/Login/index.js","components/Account/index.js","components/PopularItem/index.js","components/Popular/index.js","components/MovieItem/index.js","components/MovieItemDetails/index.js","components/Search/index.js","components/ProtectedRoute/index.js","components/NotFound/index.js","App.js","index.js"],"names":["Header","props","search","SearchFun","enteredInput","className","testid","to","alt","src","onChange","event","target","value","type","onClick","LoaderElement","color","height","width","CartContext","React","createContext","username","password","closeNavBar","triggerCloseNavBar","triggerChangeUsername","triggerChangePassword","triggerLogout","searchInput","triggerSearchChange","apiConstants","Trending","state","apiStatus","allTrendingVideos","getAllVideos","a","setState","jwtToken","Cookies","get","options","method","headers","Authorization","fetch","response","ok","json","data","updatedVideosList","results","map","each","id","backdropPath","backdrop_path","overview","posterPath","poster_path","title","this","MovieContext","Consumer","console","log","renderMovieItem","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","renderSuccessView","getResult","Component","Footer","size","Originals","allTrendingItemVideos","getOriginalVideos","TopRated","allTopRatedItemVideos","getTopRatedItemVideos","Home","homeHeaderItem","Math","floor","random","length","backgroundImage","titleOfHeader","overviewOfHeader","style","backgroundSize","backgroundRepeat","Login","showSubmitError","errorMsg","onChangeUsername","onChangePassword","onSubmitSuccess","history","set","expires","replace","onSubmitFailure","submitNetflixForm","preventDefault","userDetails","body","JSON","stringify","jwt_token","error_msg","undefined","onSubmit","htmlFor","placeholder","Account","hiddenPassword","repeat","PopularItem","allPopularVideos","getPopularItemVideos","overView","Popular","MovieItem","movieItemDetails","similarMovieItems","getFormattedData","adult","budget","genres","releaseDate","release_date","runtime","rating","vote_average","count","vote_count","similar_movies","spokenLanguage","spoken_languages","getMovieItemDetails","match","params","url","movie_details","slice","changeNewMovieDetails","dateEnd","hoursString","minutesString","dateString","Date","day","getDay","toString","endsWith","getFullYear","name","english_name","toLocaleString","month","withRouter","MovieItemDetails","apiStatusConstants","Search","searchApiStatus","searchList","inputValue","getSearchViews","SearchSucessView","PosterFailureView","HomePageLoadingView","eachMovie","callSearchApi","apiUrl","fetchedData","CamelCaseTrendingMovies","ProtectedRoute","NotFound","App","remove","Provider","exact","path","component","SearchRoute","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b784787e.chunk.js","sourcesContent":["import {HiOutlineSearch} from 'react-icons/hi'\nimport {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst Header = props => {\n  const {search, SearchFun} = props\n  let enteredInput = ''\n  const inputEntered = event => {\n    enteredInput = event.target.value\n  }\n\n  const searchButtonClicked = () => {\n    SearchFun(enteredInput)\n  }\n\n  return (\n    <div className=\"header col-12\" testid=\"header\">\n      <ul className=\"header-list-items d-flex flex-row justify-content-space-between\">\n        <li className=\"d-flex flex-row color-w\">\n          <Link to=\"/\">\n            <img\n              className=\"img\"\n              alt=\"website logo\"\n              src=\"https://res.cloudinary.com/dnjuzbuoz/image/upload/v1655456206/Group_7399_tjbtzb.png\"\n            />\n          </Link>\n          <Link to=\"/\">\n            <p className=\"color-w ml-3 head\">Home</p>\n          </Link>\n          <Link to=\"/popular\">\n            <p className=\"color-w ml-1 head\">Popular</p>\n          </Link>\n        </li>\n\n        <li className=\"d-flex flex-row\">\n          <div className=\"search d-flex flex-row align-items-center\">\n            {search === 'true' && (\n              <div className=\"d-flex flex-row search-input-container m-1\">\n                <input\n                  onChange={inputEntered}\n                  className=\"search-input\"\n                  type=\"search\"\n                />\n                <button\n                  type=\"button\"\n                  testid=\"searchButton\"\n                  onClick={searchButtonClicked}\n                  className=\"button\"\n                  alt=\"searchButton\"\n                >\n                  <HiOutlineSearch />\n                </button>\n              </div>\n            )}\n            {search !== 'true' && (\n              <Link to=\"/search\">\n                <button\n                  type=\"button\"\n                  testid=\"searchButton\"\n                  className=\"search-button\"\n                  alt=\"searchButton\"\n                >\n                  <HiOutlineSearch />\n                </button>\n              </Link>\n            )}\n          </div>\n          <div>\n            <Link to=\"/Account\">\n              <button type=\"button\" className=\"profile-button\">\n                <img\n                  alt=\"profile\"\n                  src=\"https://res.cloudinary.com/dnjuzbuoz/image/upload/v1655477627/Avatar_v4saqp.png\"\n                />\n              </button>\n            </Link>\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\nexport default Header\n","import Loader from 'react-loader-spinner'\n\nconst LoaderElement = () => (\n  <div className=\"loader-container\" testid=\"loader\">\n    <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n  </div>\n)\n\nexport default LoaderElement\n","import React from 'react'\n\nconst CartContext = React.createContext({\n  username: '',\n  password: '',\n  closeNavBar: false,\n  triggerCloseNavBar: () => {},\n  triggerChangeUsername: () => {},\n  triggerChangePassword: () => {},\n  triggerLogout: () => {},\n  searchInput: '',\n  triggerSearchChange: () => {},\n})\n\nexport default CartContext\n","import {Component} from 'react'\n\nimport Slider from 'react-slick'\nimport {Link} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\nimport LoaderElement from '../LoaderElement'\n\nimport MovieContext from '../../context/MovieContext'\n\nimport './index.css'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Trending extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    allTrendingVideos: [],\n  }\n\n  componentDidMount() {\n    this.getAllVideos()\n  }\n\n  getAllVideos = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n\n    const url = 'https://apis.ccbp.in/movies-app/trending-movies'\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n\n      const updatedVideosList = data.results.map(each => ({\n        id: each.id,\n        backdropPath: each.backdrop_path,\n        overview: each.overview,\n        posterPath: each.poster_path,\n        title: each.title,\n      }))\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        allTrendingVideos: updatedVideosList,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from trending', {username})\n\n          const renderLoader = () => <LoaderElement />\n\n          const renderSuccessView = () => {\n            const {allTrendingVideos} = this.state\n\n            const settings = {\n              dots: false,\n              infinite: false,\n              speed: 500,\n              slidesToShow: 4,\n              slidesToScroll: 1,\n              responsive: [\n                {\n                  breakpoint: 1024,\n                  settings: {\n                    slidesToShow: 4,\n                    slidesToScroll: 1,\n                  },\n                },\n                {\n                  breakpoint: 600,\n                  settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 1,\n                  },\n                },\n                {\n                  breakpoint: 480,\n                  settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 1,\n                  },\n                },\n              ],\n            }\n\n            return (\n              <ul>\n                <Slider {...settings} className=\"slick-container\">\n                  {allTrendingVideos.map(each => (\n                    <div className=\"slick-item\" key={each.id}>\n                      <li key={each.id}>\n                        <Link to={`/movies/${each.id}`} key={each.id}>\n                          <img\n                            src={each.posterPath}\n                            alt={each.title}\n                            className=\"logo-image\"\n                          />\n                        </Link>\n                      </li>\n                    </div>\n                  ))}\n                </Slider>\n              </ul>\n            )\n          }\n\n          const renderMovieItem = () => {\n            this.getAllVideos()\n          }\n\n          const renderFailureView = () => (\n            <div className=\"failure-view-container\">\n              <img\n                alt=\"failure view\"\n                src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n                className=\"failure-image\"\n              />\n              <p className=\"search-content\">\n                Something went wrong. Please try again\n              </p>\n\n              <button\n                type=\"button\"\n                className=\"try-again-button\"\n                onClick={renderMovieItem}\n              >\n                Try again\n              </button>\n            </div>\n          )\n\n          const getResult = () => {\n            const {apiStatus} = this.state\n            switch (apiStatus) {\n              case apiConstants.success:\n                return renderSuccessView()\n              case apiConstants.failure:\n                return renderFailureView()\n              case apiConstants.inProgress:\n                return renderLoader()\n              default:\n                return null\n            }\n          }\n\n          return <div testid=\"trending\">{getResult()}</div>\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default Trending\n","import {FaGoogle, FaTwitter, FaYoutube, FaInstagram} from 'react-icons/fa'\nimport {HiOutlineSearch} from 'react-icons/hi'\nimport MovieContext from '../../context/MovieContext'\n\nimport './index.css'\n\nconst Footer = () => (\n  <MovieContext.Consumer>\n    {value => {\n      const {username} = value\n      console.log(username)\n\n      return (\n        <div className=\"footer-container\">\n          <div>\n            <FaGoogle size={30} className=\"footer-icon\" />\n            <FaTwitter size={30} className=\"footer-icon\" />\n            <FaYoutube size={30} className=\"footer-icon\" />\n            <FaInstagram size={30} className=\"footer-icon\" />\n            <HiOutlineSearch size={30} className=\"footer-icon\" />\n          </div>\n          <p className=\"contact-heading\">Contact us</p>\n        </div>\n      )\n    }}\n  </MovieContext.Consumer>\n)\nexport default Footer\n","import {Component} from 'react'\n\nimport Slider from 'react-slick'\nimport {Link} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\nimport LoaderElement from '../LoaderElement'\n\nimport MovieContext from '../../context/MovieContext'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Originals extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    allTrendingItemVideos: [],\n  }\n\n  componentDidMount() {\n    this.getOriginalVideos()\n  }\n\n  getOriginalVideos = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n\n    const url = 'https://apis.ccbp.in/movies-app/originals'\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n      console.log(data)\n\n      const updatedVideosList = data.results.map(each => ({\n        id: each.id,\n        backdropPath: each.backdrop_path,\n        overview: each.overview,\n        posterPath: each.poster_path,\n        title: each.title,\n      }))\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        allTrendingItemVideos: updatedVideosList,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from originals', {username})\n\n          const renderLoader = () => <LoaderElement />\n\n          const renderSuccessView = () => {\n            const {allTrendingItemVideos} = this.state\n\n            const settings = {\n              dots: false,\n              infinite: false,\n              speed: 500,\n              slidesToShow: 4,\n              slidesToScroll: 1,\n              responsive: [\n                {\n                  breakpoint: 1024,\n                  settings: {\n                    slidesToShow: 4,\n                    slidesToScroll: 1,\n                  },\n                },\n                {\n                  breakpoint: 600,\n                  settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 1,\n                  },\n                },\n                {\n                  breakpoint: 480,\n                  settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 1,\n                  },\n                },\n              ],\n            }\n\n            return (\n              <ul>\n                <Slider {...settings} className=\"slick-container\">\n                  {allTrendingItemVideos.map(each => (\n                    <div className=\"slick-item\" key={each.id}>\n                      <li key={each.id}>\n                        <Link to={`/movies/${each.id}`} key={each.id}>\n                          <img\n                            src={each.posterPath}\n                            alt={each.title}\n                            className=\"logo-image\"\n                          />\n                        </Link>\n                      </li>\n                    </div>\n                  ))}\n                </Slider>\n              </ul>\n            )\n          }\n\n          const renderMovieItem = () => {\n            this.getOriginalVideos()\n          }\n\n          const renderFailureView = () => (\n            <div className=\"failure-view-container\">\n              <img\n                alt=\"failure view\"\n                src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n                className=\"failure-image\"\n              />\n              <p className=\"search-content\">\n                Something went wrong. Please try again\n              </p>\n\n              <button\n                type=\"button\"\n                className=\"try-again-button\"\n                onClick={renderMovieItem}\n              >\n                Try again\n              </button>\n            </div>\n          )\n\n          const getResult = () => {\n            const {apiStatus} = this.state\n            switch (apiStatus) {\n              case apiConstants.success:\n                return renderSuccessView()\n              case apiConstants.failure:\n                return renderFailureView()\n              case apiConstants.inProgress:\n                return renderLoader()\n              default:\n                return null\n            }\n          }\n\n          return <div testid=\"originals\">{getResult()}</div>\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\n\nexport default Originals\n","import {Component} from 'react'\n\nimport Slider from 'react-slick'\nimport {Link} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\nimport LoaderElement from '../LoaderElement'\n\nimport MovieContext from '../../context/MovieContext'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass TopRated extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    allTopRatedItemVideos: [],\n  }\n\n  componentDidMount() {\n    this.getTopRatedItemVideos()\n  }\n\n  getTopRatedItemVideos = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n\n    const url = 'https://apis.ccbp.in/movies-app/top-rated-movies'\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n\n      const updatedVideosList = data.results.map(each => ({\n        id: each.id,\n        backdropPath: each.backdrop_path,\n        overview: each.overview,\n        posterPath: each.poster_path,\n        title: each.title,\n      }))\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        allTopRatedItemVideos: updatedVideosList,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from originals', {username})\n\n          const renderLoader = () => <LoaderElement />\n\n          const renderSuccessView = () => {\n            const {allTopRatedItemVideos} = this.state\n\n            const settings = {\n              dots: false,\n              infinite: false,\n              speed: 500,\n              slidesToShow: 4,\n              slidesToScroll: 1,\n              responsive: [\n                {\n                  breakpoint: 1024,\n                  settings: {\n                    slidesToShow: 4,\n                    slidesToScroll: 1,\n                  },\n                },\n                {\n                  breakpoint: 600,\n                  settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 1,\n                  },\n                },\n                {\n                  breakpoint: 480,\n                  settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 1,\n                  },\n                },\n              ],\n            }\n\n            return (\n              <ul>\n                <Slider {...settings} className=\"slick-container\">\n                  {allTopRatedItemVideos.map(each => (\n                    <div className=\"slick-item\" key={each.id}>\n                      <li key={each.id}>\n                        <Link to={`/movies/${each.id}`}>\n                          <img\n                            src={each.posterPath}\n                            alt={each.title}\n                            className=\"logo-image\"\n                          />\n                        </Link>\n                      </li>\n                    </div>\n                  ))}\n                </Slider>\n              </ul>\n            )\n          }\n\n          const renderMovieItem = () => {\n            this.getTopRatedItemVideos()\n          }\n\n          const renderFailureView = () => (\n            <div className=\"failure-view-container\">\n              <img\n                alt=\"failure view\"\n                src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n                className=\"failure-image\"\n              />\n              <p className=\"search-content\">\n                Something went wrong. Please try again\n              </p>\n\n              <button\n                type=\"button\"\n                className=\"try-again-button\"\n                onClick={renderMovieItem}\n              >\n                Try again\n              </button>\n            </div>\n          )\n\n          const getResult = () => {\n            const {apiStatus} = this.state\n            switch (apiStatus) {\n              case apiConstants.success:\n                return renderSuccessView()\n              case apiConstants.failure:\n                return renderFailureView()\n              case apiConstants.inProgress:\n                return renderLoader()\n              default:\n                return null\n            }\n          }\n\n          return <div testid=\"toprated\">{getResult()}</div>\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\n\nexport default TopRated\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Header from '../Header'\nimport Trending from '../Trending'\n\nimport './index.css'\nimport MovieContext from '../../context/MovieContext'\nimport Footer from '../Footer'\nimport LoaderElement from '../LoaderElement'\nimport Originals from '../Originals'\nimport TopRated from '../TopRated'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Home extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    allTrendingVideos: [],\n  }\n\n  componentDidMount() {\n    this.getAllVideos()\n  }\n\n  getAllVideos = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n\n    const url = 'https://apis.ccbp.in/movies-app/originals'\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n\n      const updatedVideosList = data.results.map(each => ({\n        id: each.id,\n        backdropPath: each.backdrop_path,\n        overview: each.overview,\n        posterPath: each.poster_path,\n        title: each.title,\n      }))\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        allTrendingVideos: updatedVideosList,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  render() {\n    const renderSuccessView = () => {\n      const {allTrendingVideos} = this.state\n\n      const homeHeaderItem =\n        allTrendingVideos[Math.floor(Math.random() * allTrendingVideos.length)]\n\n      const backgroundImage = homeHeaderItem.backdropPath\n      const titleOfHeader = homeHeaderItem.title\n      const overviewOfHeader = homeHeaderItem.overview\n\n      return (\n        <div\n          className=\"spiderman-container\"\n          style={{\n            backgroundImage: `url(${backgroundImage})`,\n            backgroundSize: '100% 100%',\n            backgroundRepeat: 'no-repeat',\n          }}\n        >\n          <Header />\n          <div className=\"home-header-content\">\n            <h1 className=\"movie-details-name\">{titleOfHeader}</h1>\n            <p className=\"movie-details-description\">{overviewOfHeader}</p>\n            <button type=\"button\" className=\"movies-details-play-button\">\n              Play\n            </button>\n          </div>\n        </div>\n      )\n    }\n\n    const renderMovieItem = () => {\n      this.getAllVideos()\n    }\n\n    const renderLoader = () => <LoaderElement />\n\n    const renderFailureView = () => (\n      <div className=\"failure-view-container\">\n        <img\n          alt=\"failure view\"\n          src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n          className=\"failure-image\"\n        />\n        <p className=\"search-content\">Something went wrong. Please try again</p>\n\n        <button\n          type=\"button\"\n          className=\"try-again-button\"\n          onClick={renderMovieItem}\n        >\n          Try again\n        </button>\n      </div>\n    )\n\n    const getResult = () => {\n      const {apiStatus} = this.state\n      switch (apiStatus) {\n        case apiConstants.success:\n          return renderSuccessView()\n        case apiConstants.failure:\n          return renderFailureView()\n        case apiConstants.inProgress:\n          return renderLoader()\n        default:\n          return null\n      }\n    }\n\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from Home', {username})\n\n          return (\n            <>\n              <div className=\"home-container\" testid=\"home\">\n                {getResult()}\n                <h1 className=\"trending-heading\">Trending Now</h1>\n                <Trending />\n                <h1 className=\"trending-heading\">Top Rated</h1>\n                <TopRated />\n                <h1 className=\"trending-heading\">Originals</h1>\n                <Originals />\n              </div>\n              <Footer />\n            </>\n          )\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default Home\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\n\nimport MovieContext from '../../context/MovieContext'\nimport './index.css'\n\nclass Login extends Component {\n  state = {\n    showSubmitError: false,\n    errorMsg: '',\n  }\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {\n            username,\n            password,\n            triggerChangeUsername,\n            triggerChangePassword,\n          } = value\n\n          const onChangeUsername = event => {\n            triggerChangeUsername(event)\n          }\n\n          const onChangePassword = event => {\n            triggerChangePassword(event)\n          }\n\n          const onSubmitSuccess = jwtToken => {\n            const {history} = this.props\n\n            Cookies.set('jwt_token', jwtToken, {\n              expires: 30,\n            })\n            history.replace('/')\n          }\n\n          const onSubmitFailure = errorMsg => {\n            this.setState({showSubmitError: true, errorMsg})\n          }\n\n          const submitNetflixForm = async event => {\n            event.preventDefault()\n\n            const userDetails = {username, password}\n            const url = 'https://apis.ccbp.in/login'\n            const options = {\n              method: 'POST',\n              body: JSON.stringify(userDetails),\n            }\n            const response = await fetch(url, options)\n            const data = await response.json()\n            if (response.ok === true) {\n              onSubmitSuccess(data.jwt_token)\n            } else {\n              onSubmitFailure(data.error_msg)\n            }\n          }\n\n          const renderPasswordField = () => (\n            <>\n              <label className=\"input-label\" htmlFor=\"password\">\n                PASSWORD\n              </label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                className=\"password-input-field\"\n                value={password}\n                onChange={onChangePassword}\n                placeholder=\"Password\"\n              />\n            </>\n          )\n\n          const renderUsernameField = () => (\n            <>\n              <label className=\"input-label\" htmlFor=\"username\">\n                USERNAME\n              </label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                className=\"username-input-field\"\n                value={username}\n                onChange={onChangeUsername}\n                placeholder=\"Username\"\n              />\n            </>\n          )\n\n          const {showSubmitError, errorMsg} = this.state\n          const jwtToken = Cookies.get('jwt_token')\n\n          if (jwtToken !== undefined) {\n            return <Redirect to=\"/\" />\n          }\n\n          return (\n            <div className=\"login-form-container\">\n              <div>\n                <img\n                  src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650191862/Mini%20Project%20Netflix%20Clone/MoviesIcon_snclt2.png\"\n                  alt=\"login website logo\"\n                />\n              </div>\n\n              <form className=\"form-container\" onSubmit={submitNetflixForm}>\n                <h1 className=\"login-heading\">Login</h1>\n                <div className=\"input-container\">{renderUsernameField()}</div>\n                <div className=\"input-container\">{renderPasswordField()}</div>\n                {showSubmitError && (\n                  <p className=\"error-message\">*{errorMsg}</p>\n                )}\n                <button type=\"submit\" className=\"login-button\">\n                  Login\n                </button>\n              </form>\n              <h1 className=\"watermark\">Developed by P.S.S.Pavan Kumar</h1>\n            </div>\n          )\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\n\nexport default Login\n","import MovieContext from '../../context/MovieContext'\nimport Header from '../Header'\nimport Footer from '../Footer'\n\nimport './index.css'\n\nconst Account = props => (\n  <MovieContext.Consumer>\n    {value => {\n      const {username, password, triggerLogout} = value\n\n      const onClickLogout = () => {\n        triggerLogout(props)\n      }\n\n      const hiddenPassword = '*'.repeat(password.length)\n\n      return (\n        <>\n          <div className=\"account-container\" testid=\"account\">\n            <Header />\n            <div className=\"account-container-2\">\n              <h1>\n                Account\n                <hr />\n              </h1>\n\n              <div className=\"account-element\">\n                <p className=\"header-element\">Member ship</p>\n                <div>\n                  <p>{username}@gmail.com</p>\n                  <p>Password: {hiddenPassword} </p>\n                </div>\n              </div>\n              <hr />\n\n              <div className=\"account-element\">\n                <p className=\"header-element\">Plan Details</p>\n                <div>\n                  <p>Premium</p>\n                  <p className=\"ultra-hd\">Ultra HD</p>\n                </div>\n              </div>\n              <button\n                type=\"button\"\n                className=\"logout-button\"\n                onClick={onClickLogout}\n              >\n                Logout\n              </button>\n            </div>\n\n            <Footer />\n          </div>\n        </>\n      )\n    }}\n  </MovieContext.Consumer>\n)\nexport default Account\n","import {Component} from 'react'\n\nimport {Link} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\nimport LoaderElement from '../LoaderElement'\n\nimport MovieContext from '../../context/MovieContext'\nimport './index.css'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass PopularItem extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    allPopularVideos: [],\n  }\n\n  componentDidMount() {\n    this.getPopularItemVideos()\n  }\n\n  getPopularItemVideos = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n\n    const url = 'https://apis.ccbp.in/movies-app/popular-movies'\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n\n      const updatedVideosList = data.results.map(each => ({\n        id: each.id,\n        backdropPath: each.backdrop_path,\n        overview: each.overView,\n        posterPath: each.poster_path,\n        title: each.title,\n      }))\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        allPopularVideos: updatedVideosList,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from popular', {username})\n\n          const renderLoader = () => <LoaderElement />\n\n          const renderSuccessView = () => {\n            const {allPopularVideos} = this.state\n\n            return (\n              <div className=\"popular-video-list-container\">\n                <ul className=\"popular-video-list\">\n                  {allPopularVideos.map(each => (\n                    <li key={each.id}>\n                      <Link to={`/movies/${each.id}`} key={each.id}>\n                        <img\n                          src={each.posterPath}\n                          alt={each.title}\n                          className=\"popular-image\"\n                        />\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )\n          }\n\n          const renderMovieItem = () => {\n            this.getPopularItemVideos()\n          }\n\n          const renderFailureView = () => (\n            <div className=\"failure-view-container\">\n              <img\n                alt=\"failure view\"\n                src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n                className=\"failure-image\"\n              />\n              <p className=\"search-content\">\n                Something went wrong. Please try again\n              </p>\n\n              <button\n                type=\"button\"\n                onClick={renderMovieItem}\n                className=\"try-again-button\"\n              >\n                Try again\n              </button>\n            </div>\n          )\n\n          const getResult = () => {\n            const {apiStatus} = this.state\n            switch (apiStatus) {\n              case apiConstants.success:\n                return renderSuccessView()\n              case apiConstants.failure:\n                return renderFailureView()\n              case apiConstants.inProgress:\n                return renderLoader()\n              default:\n                return null\n            }\n          }\n\n          return <div testid=\"trending\">{getResult()}</div>\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default PopularItem\n","import {Component} from 'react'\nimport Header from '../Header'\n\nimport MovieContext from '../../context/MovieContext'\nimport Footer from '../Footer'\n// import LoadingElement from '../LoaderElement'\nimport PopularItem from '../PopularItem'\n\nclass Popular extends Component {\n  //   state = {searchInput: ''}\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from Home', {username})\n\n          return (\n            <>\n              <div className=\"home-container\" testid=\"popular\">\n                <Header />\n                <PopularItem />\n                <Footer />\n              </div>\n            </>\n          )\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\n\nexport default Popular\n","import {Component} from 'react'\n\nimport {Link, withRouter} from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport LoaderElement from '../LoaderElement'\n\nimport MovieContext from '../../context/MovieContext'\n\nimport './index.css'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass MovieItem extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    movieItemDetails: [],\n    similarMovieItems: [],\n  }\n\n  componentDidMount() {\n    this.getMovieItemDetails()\n  }\n\n  getFormattedData = each => ({\n    id: each.id,\n    backdropPath: each.backdrop_path,\n    title: each.title,\n    adult: each.adult,\n    budget: each.budget,\n    genres: each.genres,\n    overview: each.overview,\n    posterPath: each.poster_path,\n    releaseDate: each.release_date,\n    runtime: each.runtime,\n    rating: each.vote_average,\n    count: each.vote_count,\n    similarMovieItems: each.similar_movies,\n    spokenLanguage: each.spoken_languages,\n  })\n\n  getMovieItemDetails = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    const url = `https://apis.ccbp.in/movies-app/movies/${id}`\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n\n      const updatedVideosList = this.getFormattedData(data.movie_details)\n\n      this.setState({\n        apiStatus: apiConstants.success,\n        movieItemDetails: updatedVideosList,\n        similarMovieItems: updatedVideosList.similarMovieItems.slice(0, 6),\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  changeNewMovieDetails = () => {\n    this.getMovieItemDetails()\n  }\n\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from trending', {username})\n\n          const renderLoader = () => <LoaderElement />\n\n          const renderMovieItem = () => {\n            this.getMovieItemDetails()\n          }\n\n          const renderSuccessView = () => {\n            const {movieItemDetails, similarMovieItems} = this.state\n            const {\n              title,\n              backdropPath,\n              runtime,\n              adult,\n              releaseDate,\n              overview,\n              genres,\n              count,\n              rating,\n              budget,\n              spokenLanguage,\n            } = movieItemDetails\n            const backgroundImage = backdropPath\n            const hoursString = Math.floor(runtime / 60)\n            const minutesString = runtime % 60\n            const dateString = new Date(releaseDate)\n            let dateEnd\n            const day = dateString.getDay().toString()\n            if (day.endsWith('3')) {\n              dateEnd = 'rd'\n            } else if (day.endsWith('2')) {\n              dateEnd = 'nd'\n            } else if (day.endsWith('1')) {\n              dateEnd = 'st'\n            } else {\n              dateEnd = 'th'\n            }\n            return (\n              <div className=\"home-background\" testid=\"movieItem\">\n                <div\n                  style={{\n                    backgroundImage: `url(${backgroundImage})`,\n                    backgroundSize: '100% 100%',\n                    backgroundRepeat: 'no-repeat',\n                  }}\n                  className=\"movies-details-top-container\"\n                >\n                  <h1 className=\"movies-details-top-container-heading\">\n                    {title}\n                  </h1>\n                  <div className=\"hours-container\">\n                    <p className=\"hours\">{`${hoursString}h ${minutesString}m`}</p>\n                    <p className=\"language\">{adult ? 'A' : 'U/A'}</p>\n                    <p className=\"hours\">{dateString.getFullYear()}</p>\n                  </div>\n                  <p className=\"overview\">{overview}</p>\n                  <button type=\"button\" className=\"button\">\n                    Play\n                  </button>\n                </div>\n                <div className=\"genre-container\">\n                  <ul>\n                    <h1 className=\"genre-heading\">Genres</h1>\n                    {genres.map(each => (\n                      <li className=\"genre-option\" key={each.id}>\n                        <p>{each.name}</p>\n                      </li>\n                    ))}\n                  </ul>\n                  <ul>\n                    <h1 className=\"genre-heading\">Audio Available</h1>\n                    {spokenLanguage.map(each => (\n                      <li className=\"genre-option\" key={each.id}>\n                        <p>{each.english_name}</p>\n                      </li>\n                    ))}\n                  </ul>\n                  <ul>\n                    <h1 className=\"genre-heading\">Rating Count</h1>\n                    <li className=\"genre-option\">\n                      <p>{count}</p>\n                    </li>\n                    <h1 className=\"genre-heading\">Rating Average</h1>\n                    <li className=\"genre-option\">\n                      <p>{rating}</p>\n                    </li>\n                  </ul>\n                  <ul>\n                    <h1 className=\"genre-heading\">Budget</h1>\n                    <li className=\"genre-option\">\n                      <p>{budget} crores</p>\n                    </li>\n                    <h1 className=\"genre-heading\">Release Date</h1>\n                    <li className=\"genre-option\">\n                      <p>{`${day}${dateEnd} ${dateString.toLocaleString(\n                        'default',\n                        {\n                          month: 'long',\n                        },\n                      )} ${dateString.getFullYear()}`}</p>\n                    </li>\n                  </ul>\n                </div>\n                <h1 className=\"similar-heading\">More like this</h1>\n                <ul className=\"similar-movies-container\">\n                  {similarMovieItems.map(each => (\n                    <li key={each.id} className=\"link\">\n                      <Link to={`/movies/${each.id}`} target=\"blank\">\n                        <img\n                          src={each.poster_path}\n                          alt={each.title}\n                          className=\"similar-movie-image\"\n                          onClick={this.changeNewMovieDetails}\n                        />\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )\n          }\n\n          const renderFailureView = () => (\n            <div className=\"failure-view-container\">\n              <img\n                alt=\"failure view\"\n                src=\"https://res.cloudinary.com/dtjcxf7z5/image/upload/v1650297174/Mini%20Project%20Netflix%20Clone/Background-Complete_t8c6zl.png\"\n              />\n              <p className=\"search-content\">\n                Something went wrong. Please try again\n              </p>\n\n              <button\n                className=\"try-again-button\"\n                type=\"button\"\n                onClick={renderMovieItem}\n              >\n                Try again\n              </button>\n            </div>\n          )\n\n          const getResult = () => {\n            const {apiStatus} = this.state\n            switch (apiStatus) {\n              case apiConstants.success:\n                return renderSuccessView()\n              case apiConstants.failure:\n                return renderFailureView()\n              case apiConstants.inProgress:\n                return renderLoader()\n              default:\n                return null\n            }\n          }\n\n          return <div testid=\"movieItem\">{getResult()}</div>\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\n\nexport default withRouter(MovieItem)\n","import {Component} from 'react'\nimport Header from '../Header'\n\nimport MovieContext from '../../context/MovieContext'\nimport Footer from '../Footer'\n// import LoadingElement from '../LoaderElement'\nimport MovieItem from '../MovieItem'\n\nclass MovieItemDetails extends Component {\n  render() {\n    return (\n      <MovieContext.Consumer>\n        {value => {\n          const {username} = value\n          console.log('username from movieItemDetails', {username})\n\n          return (\n            <>\n              <div className=\"home-container\">\n                <Header />\n                <MovieItem />\n              </div>\n              <Footer />\n            </>\n          )\n        }}\n      </MovieContext.Consumer>\n    )\n  }\n}\nexport default MovieItemDetails\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Link} from 'react-router-dom'\nimport Loader from 'react-loader-spinner'\n\nimport Header from '../Header'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass Search extends Component {\n  state = {\n    searchApiStatus: apiStatusConstants.initial,\n    searchList: [],\n    inputValue: '',\n  }\n\n  componentDidMount() {\n    // this.callSearchApi()\n  }\n\n  getSearchViews = () => {\n    const {searchApiStatus} = this.state\n    console.log(searchApiStatus)\n    switch (searchApiStatus) {\n      case apiStatusConstants.success:\n        return this.SearchSucessView()\n      case apiStatusConstants.failure:\n        return this.PosterFailureView()\n      case apiStatusConstants.inProgress:\n        return this.HomePageLoadingView()\n      default:\n        return null\n    }\n  }\n\n  SearchSucessView = () => {\n    const {searchList} = this.state\n    console.log('sucess', searchList)\n    // const num = 0\n    return (\n      <div className=\"popular-movies-section\">\n        <ul className=\"d-flex flex-row col-12 similar-movies-list-items\">\n          {searchList.map(eachMovie => (\n            <li className=\"col-4 p-1\">\n              <Link to={`/movies/${eachMovie.id}`}>\n                <img\n                  alt={eachMovie.title}\n                  className=\"popular-movie-item col-12\"\n                  src={eachMovie.backdropPath}\n                />\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  PosterFailureView = () => {\n    const {inputValue} = this.state\n    return (\n      <div className=\"col-12 d-flex flex-column align-items-center justify-content-center failure-view\">\n        {/* <BiError /> */}\n        <img\n          alt=\"no movies\"\n          src=\"https://res.cloudinary.com/dnjuzbuoz/image/upload/v1655559570/Group_7394_jx0wym.png\"\n        />\n        <p>Your search for {inputValue} did not find any matches.</p>\n      </div>\n    )\n  }\n\n  HomePageLoadingView = () => (\n    <div className=\"products-loader-container\" testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  callSearchApi = async searchInput => {\n    const apiUrl = `https://apis.ccbp.in/movies-app/movies-search?search=${searchInput}`\n    this.setState({\n      searchApiStatus: apiStatusConstants.inProgress,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n\n    const response = await fetch(apiUrl, options)\n    if (response.ok === true) {\n      const fetchedData = await response.json()\n      console.log(fetchedData, 'Search movies')\n      const {results} = await fetchedData\n      if (results.length === 0) {\n        this.setState({\n          searchApiStatus: apiStatusConstants.failure,\n          inputValue: searchInput,\n        })\n      } else {\n        const CamelCaseTrendingMovies = results.map(eachMovie => ({\n          backdropPath: eachMovie.backdrop_path,\n          id: eachMovie.id,\n          overview: eachMovie.overview,\n          posterPath: eachMovie.poster_path,\n          title: eachMovie.title,\n        }))\n        console.log(CamelCaseTrendingMovies)\n        this.setState({\n          searchApiStatus: apiStatusConstants.success,\n          searchList: [...CamelCaseTrendingMovies],\n        })\n      }\n    } else {\n      this.setState({searchApiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  SearchFun = inputValue => {\n    this.callSearchApi(inputValue)\n  }\n\n  render() {\n    return (\n      <div className=\"search-route\">\n        <div className=\"search-header\">\n          <Header SearchFun={this.SearchFun} search=\"true\" />\n        </div>\n\n        <>\n          <h1>Home</h1>\n        </>\n\n        <div>{this.getSearchViews()}</div>\n      </div>\n    )\n  }\n}\nexport default Search\n","import Cookies from 'js-cookie'\nimport {Route, Redirect} from 'react-router-dom'\n\nconst ProtectedRoute = props => {\n  const jwtToken = Cookies.get('jwt_token')\n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\nexport default ProtectedRoute\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst NotFound = () => (\n  <div className=\"failureContainer\" testid=\"not found\">\n    <h1>Lost Your way</h1>\n    <p>\n      we are sorry, the page you requested could not be found Please go back to\n      the homepage.\n    </p>\n    <Link to=\"/\">\n      <button type=\"button\">Go to Home</button>\n    </Link>\n  </div>\n)\nexport default NotFound\n","import {Component} from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\n\nimport './App.css'\nimport Home from './components/Home'\nimport Login from './components/Login'\nimport Account from './components/Account'\nimport Popular from './components/Popular'\nimport MovieItemDetails from './components/MovieItemDetails'\nimport SearchRoute from './components/Search'\n\nimport MovieContext from './context/MovieContext'\n\nimport ProtectedRoute from './components/ProtectedRoute'\nimport NotFound from './components/NotFound'\n\nclass App extends Component {\n  state = {username: '', password: ''}\n\n  triggerChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  triggerChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  triggerLogout = props => {\n    const {history} = props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n    this.setState({username: '', password: ''})\n  }\n\n  render() {\n    const {username, password} = this.state\n\n    return (\n      <MovieContext.Provider\n        value={{\n          username,\n          password,\n          triggerChangeUsername: this.triggerChangeUsername,\n          triggerChangePassword: this.triggerChangePassword,\n          triggerLogout: this.triggerLogout,\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <ProtectedRoute exact path=\"/\" component={Home} />\n          <ProtectedRoute exact path=\"/account\" component={Account} />\n          <ProtectedRoute exact path=\"/popular\" component={Popular} />\n          <ProtectedRoute exact path=\"/search\" component={SearchRoute} />\n          <ProtectedRoute\n            exact\n            path=\"/movies/:id\"\n            component={MovieItemDetails}\n          />\n          <Route exact path=\"/not-found\" component={NotFound} />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </MovieContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}